DROP TYPE ADRESSE_TYPE FORCE;
DROP TYPE PERSONNE_TYPE FORCE;
DROP TYPE ELEVES_TYPE FORCE;
DROP TYPE PROFESSEURS_TYPE FORCE;
DROP TYPE ACTIVITES_TYPE FORCE;
DROP TYPE COURS_TYPE FORCE;


DROP TABLE PERSONNES CASCADE CONSTRAINT;
DROP TABLE ACTIVITES CASCADE CONSTRAINT;
DROP TABLE COURS CASCADE CONSTRAINT;

DROP TABLE ELEVES CASCADE CONSTRAINT;
DROP TABLE PROFESSEURS CASCADE CONSTRAINT;

--PARTIE 1 

--QUESTION 1
CREATE TYPE ADRESSE_TYPE AS OBJECT(
    NUM_RUE        NUMBER,
    NOM_RUE        VARCHAR2(50),
    NOM_VILLE      VARCHAR2(50)
)
/

--QUESTION 2
CREATE TYPE PERSONNE_TYPE AS OBJECT(
    NUM_PERSONNE    NUMBER(4),
    NOM             VARCHAR2(25),
    PRENOM          VARCHAR2(25),
    DATE_NAISSANCE  DATE,
    POIDS           NUMBER,
    ANNEE           NUMBER,
    SEXE            CHAR(1)
)
NOT FINAL
/
--PARTIE 3 QUESTION 2 / 3 

CREATE TYPE ELEVES_TYPE UNDER PERSONNE_TYPE(
    ADRESSE         ADRESSE_TYPE
)
FINAL
/

CREATE TYPE PROFESSEURS_TYPE UNDER PERSONNE_TYPE(
    SPECIALITE      VARCHAR2(255),
    DATE_ENTREE     DATE,
    DER_PROM        DATE,
    SALAIRE_BASE    NUMBER,
    SALAIRE_ACTUEL  NUMBER
)
FINAL
/


--QUESTION 3
CREATE TYPE ACTIVITES_TYPE AS OBJECT(
    NIVEAU          NUMBER(1),
    NOM             VARCHAR2(20),
    EQUIPE          VARCHAR2(32)
)
/

CREATE TYPE COURS_TYPE AS OBJECT(
    NUM_COURS       NUMBER(2),
    NOM             VARCHAR2(20),
    NBHEURES        NUMBER(2),
    ANNEE           NUMBER(1)
)
/

--QUESTION 4
CREATE TABLE PERSONNES OF PERSONNE_TYPE(
    CONSTRAINT PK_PERSONNES                 PRIMARY KEY(NUM_PERSONNE),
    CONSTRAINT NN_PERSONNES_NOM             CHECK(NOM IS NOT NULL),
    CONSTRAINT NN_PERSONNES_PRENOM          CHECK(PRENOM IS NOT NULL) ,
    CONSTRAINT CK_PERSONNES_SEXE            CHECK(SEXE IN ('M', 'm', 'F', 'f', NULL))
)
/

CREATE TABLE ACTIVITES OF ACTIVITES_TYPE(
    CONSTRAINT PK_ACTIVITES                 PRIMARY KEY(NIVEAU, NOM)
)
/

CREATE TABLE COURS OF COURS_TYPE(
    CONSTRAINT PK_COURS                     PRIMARY KEY(NUM_COURS),
    CONSTRAINT NN_COURS_NOM                 CHECK(NOM IS NOT NULL)
)
/

--QUESTION 5

--DESCRIBE PERSONNES
--DESCRIBE ACTIVITES
--DESCRIBE COURS



--PARTIE 2
--QUESTION 1
INSERT INTO COURS (NUM_COURS, NOM, NBHEURES, ANNEE)
VALUES(1, 'Réseau', 15, 1);

INSERT INTO COURS (NUM_COURS, NOM, NBHEURES, ANNEE)
VALUES(2, 'Sgbd', 30, 1) ;

INSERT INTO COURS (NUM_COURS, NOM, NBHEURES, ANNEE)
VALUES(3, 'Programmation', 15,1) ;

INSERT INTO COURS (NUM_COURS, NOM, NBHEURES, ANNEE)
VALUES(4, 'Sgbd', 30,2 ) ;

INSERT INTO COURS (NUM_COURS, NOM, NBHEURES, ANNEE)
VALUES(5, 'Analyse', 60,2) ;



INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(1,'Mini foot','Amc Indus') ;

Insert into ACTIVITES (Niveau, Nom, equipe) 
values (1,'Surf','Les planchistes ...') ;

INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(2,'Tennis','Ace Club') ;

INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(3,'Tennis','Ace Club') ;

INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(1,'Volley ball', 'Avs80') ;

INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(2,'Mini foot', 'Les as du ballon') ;

INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(2,'Volley ball', 'smash') ;


--QUESTION 2
--SELECT * FROM USER_TABLES
--SELECT * FROM USER_OBJECT_TABLES




--QUESTION 3
SELECT * 
    FROM COURS;

SELECT NOM, COUNT(*) AS NOMBRE_EQUIPE
    FROM ACTIVITES_PRATIQUEES
    GROUP BY NOM;

SELECT * 
    FROM COURS
    WHERE NBHEURES>=25;
    
INSERT INTO ACTIVITES (NIVEAU, NOM, EQUIPE)
VALUES(1,'ski', 'Ace Club') ;




--QUESTION 4

CREATE TABLE ELEVES OF ELEVES_TYPE(
    CONSTRAINT PK_ELEVES                    PRIMARY KEY(NUM_PERSONNE)
)
/

CREATE TABLE PROFESSEURS OF PROFESSEURS_TYPE(
    CONSTRAINT PK_PROFESSEURS               PRIMARY KEY(NUM_PERSONNE)
)
/







--QUESTION 5

CREATE OR REPLACE TRIGGER VERIFIER_ELEVES BEFORE INSERT OR UPDATE
ON ELEVES FOR EACH ROW

DECLARE 
    DRAPEAU       INTEGER:=0;
    EXISTE        EXCEPTION;

BEGIN
    SELECT COUNT(*) INTO DRAPEAU
            FROM PROFESSEURS
            WHERE NUM_PERSONNE=:NEW.NUM_PERSONNE;
            
    IF DRAPEAU!=0 THEN
        RAISE EXISTE;
    END IF;
    
EXCEPTION 
    WHEN EXISTE THEN
        RAISE_APPLICATION_ERROR(-20020, 'La personne est deja un professeur, il ne peut être les deux à la fois');

END;
/




CREATE OR REPLACE TRIGGER VERIFIER_PROFESSEURS BEFORE INSERT OR UPDATE
ON PROFESSEURS FOR EACH ROW

DECLARE 
    DRAPEAU       INTEGER:=0;
    EXISTE        EXCEPTION;

BEGIN
    SELECT COUNT(*) INTO DRAPEAU
            FROM ELEVES
            WHERE NUM_PERSONNE=:NEW.NUM_PERSONNE;
            
    IF DRAPEAU!=0 THEN
        RAISE EXISTE;
    END IF;
    
EXCEPTION 
    WHEN EXISTE THEN
        RAISE_APPLICATION_ERROR(-20000, 'La personne est deja un élève, il ne peut être les deux à la fois');

END;
/


--QUESTION 6

INSERT INTO PROFESSEURS VALUES(11, 'Bottle', 'Sophie', '30-08-1970',45, 1, 'F', 'poésie', '01-10-1970', '01-10-1988', 2000000, 2600000) ;

INSERT INTO PROFESSEURS VALUES(22, 'Bolenov', 'Pierre', '16-03-1972', 87, 2, 'M','réseau', '15-11-1968', '01-10-1998', 1900000, 2468000) ;

INSERT INTO PROFESSEURS VALUES(33, 'Toni', 'Gorges','27-09-1973', 64, 1, 'M', 'poo', '01-10-1979', '01-01-1989', 1900000, 2360000) ;

INSERT INTO PROFESSEURS VALUES(44, 'Pastecnov', 'Alice','01-12-1973', 46, 1, 'F','sql', '01-10-1975', '', 2500000, 2500000) ;

INSERT INTO PROFESSEURS VALUES(55, 'Selector', 'Carine','19-02-1974', 73, 1, 'F','sql', '15-10-1982', '01-10-1988', 1900000, 1900000) ;

INSERT INTO PROFESSEURS VALUES(66, 'Vilplusplus', 'Helene', '29-04-1974', 68, 2, 'F','poo', '25-04-1990', '05-06-1994', 1900000, 2200000) ;

INSERT INTO PROFESSEURS VALUES(77, 'Francesca', 'Marjolijn','22-06-1975', 85, 2, 'F', '', '01-10-1975', '11-01-1998', 2000000, 3200000) ;

INSERT INTO PROFESSEURS VALUES(88, 'Pucette', 'Francois', '10-12-1978', 58, 2, 'M', 'sql', '06-12-1988', '29-02-1996', 2000000, 2500000) ;





INSERT INTO ELEVES VALUES(1, 'Brisefer', 'Benoit', '10-12-1978', 35, 1, 'M', ADRESSE_TYPE(1, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(2, 'Génial', 'Olivier', '10-04-1978', 42, 1, 'M', ADRESSE_TYPE(2, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(3, 'Jourdan', 'Gil', '28-06-1974', 72, 2, 'F', ADRESSE_TYPE(3, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(4, 'Spring', 'Jerry', '16-02-1974', 78, 2, 'M', ADRESSE_TYPE(4, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(5, 'Tsuno', 'Yoko', '29-10-1977', 45, 1, 'F', ADRESSE_TYPE(5, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(6, 'Lebut', 'Marc', '29-04-1974', 75,2, 'M', ADRESSE_TYPE(6, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(77, 'Lagaffe', 'Gaston', '08-04-1975', 61,1, 'M', ADRESSE_TYPE(7, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(8, 'Dubois', 'Robin', '20-04-1976', 60, 2, 'M', ADRESSE_TYPE(8, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(9, 'Walthéry', 'Natacha', '07-09-1977', 59,1, 'F', ADRESSE_TYPE(9, '10 Rue Victor Hugo', 'Paris'));

INSERT INTO ELEVES VALUES(10, 'Danny', 'Buck', '15-02-1973', 82, 2, 'M', ADRESSE_TYPE(10, '10 Rue Victor Hugo', 'Paris'));

UPDATE ELEVES
SET NUM_PERSONNE=88
WHERE NUM_PERSONNE=1;


--QUESTION 7
SELECT * FROM ELEVES;

SELECT * FROM PROFESSEURS;





/*
    PARTIE 4
*/

--QUESTION 1

DROP TYPE UE_TYPE FORCE;
DROP TYPE UES_TYPE FORCE;
DROP TYPE COURS_TYPE FORCE;

DROP TABLE COURS CASCADE CONSTRAINT;

CREATE TYPE UE_TYPE AS OBJECT
(
	NOM_COURS	VARCHAR2(50)
)
/

CREATE TYPE UES_TYPE AS VARRAY(5) OF UE_TYPE
/

CREATE TYPE COURS_TYPE AS OBJECT
(
	NOM_UE 		VARCHAR2(50),
	MES_COURS 	UES_TYPE
)
/

CREATE TABLE COURS OF COURS_TYPE
(
	CONSTRAINT PK_COURS PRIMARY KEY(NOM_UE)
);

--QUESTION 2

INSERT INTO COURS VALUES('Informatique', UES_TYPE( UE_TYPE('BDD'),
                                                   UE_TYPE('Fondement de la programmation'),
                                                   UE_TYPE('Java'),
                                                   UE_TYPE('HTML'),
                                                   UE_TYPE('Admin Systeme')
                                                   ));

INSERT INTO COURS VALUES('Scientifique', UES_TYPE( UE_TYPE('Maths'),
                                                   UE_TYPE('Logique'),
                                                   UE_TYPE('SVT'),
                                                   UE_TYPE('Chimie')
                                                   ));

--QUESTION 3

DROP TYPE RESULTAT_TYPE FORCE;
DROP TYPE RESULTATS_TYPE FORCE;
DROP TYPE PERSONNE_TYPE FORCE;
DROP TYPE ELEVES_TYPE FORCE;

DROP TABLE PERSONNES CASCADE CONSTRAINT;
DROP TABLE ELEVES CASCADE CONSTRAINT;



CREATE TYPE RESULTAT_TYPE AS OBJECT(
	NOM_COURS 		VARCHAR2(25),
	POINTS 			NUMBER
)
/

CREATE TYPE RESULTATS_TYPE AS TABLE OF RESULTAT_TYPE
/


CREATE TYPE PERSONNE_TYPE AS OBJECT(
    NUM_PERSONNE    NUMBER(4),
    NOM             VARCHAR2(25),
    PRENOM          VARCHAR2(25),
    DATE_NAISSANCE  DATE,
    POIDS           NUMBER,
    ANNEE           NUMBER,
    SEXE            CHAR(1)
)
NOT FINAL
/

CREATE TYPE ELEVES_TYPE UNDER PERSONNE_TYPE(
    ADRESSE         ADRESSE_TYPE,
    RESULTAT 		RESULTATS_TYPE
)
FINAL
/

CREATE TABLE PERSONNES OF PERSONNE_TYPE(
    CONSTRAINT PK_PERSONNES                 PRIMARY KEY(NUM_PERSONNE),
    CONSTRAINT NN_PERSONNES_NOM             CHECK(NOM IS NOT NULL),
    CONSTRAINT NN_PERSONNES_PRENOM          CHECK(PRENOM IS NOT NULL) ,
    CONSTRAINT CK_PERSONNES_SEXE            CHECK(SEXE IN ('M', 'm', 'F', 'f', NULL))
)
/

CREATE TABLE ELEVES OF ELEVES_TYPE(
    CONSTRAINT PK_ELEVES                    PRIMARY KEY(NUM_PERSONNE)
)
NESTED TABLE RESULTAT STORE AS TABRESULTAT
/

--QUESTION 4 / 5

INSERT INTO ELEVES VALUES(1, 'Brisefer', 'Benoit', '10-12-1978', 35, 1, 'M', ADRESSE_TYPE(1, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(2, 'Génial', 'Olivier', '10-04-1978', 42, 1, 'M', ADRESSE_TYPE(2, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(3, 'Jourdan', 'Gil', '28-06-1974', 72, 2, 'F', ADRESSE_TYPE(3, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(4, 'Spring', 'Jerry', '16-02-1974', 78, 2, 'M', ADRESSE_TYPE(4, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18),
			RESULTAT_TYPE('Analyse', 10)
		)
	);

INSERT INTO ELEVES VALUES(5, 'Tsuno', 'Yoko', '29-10-1977', 45, 1, 'F', ADRESSE_TYPE(5, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18),
			RESULTAT_TYPE('Analyse', 20)
		)
	);

INSERT INTO ELEVES VALUES(6, 'Lebut', 'Marc', '29-04-1974', 75,2, 'M', ADRESSE_TYPE(6, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18),
			RESULTAT_TYPE('Analyse', 2)
		)
	);

INSERT INTO ELEVES VALUES(77, 'Lagaffe', 'Gaston', '08-04-1975', 61,1, 'M', ADRESSE_TYPE(7, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(8, 'Dubois', 'Robin', '20-04-1976', 60, 2, 'M', ADRESSE_TYPE(8, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(9, 'Walthéry', 'Natacha', '07-09-1977', 59,1, 'F', ADRESSE_TYPE(9, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);

INSERT INTO ELEVES VALUES(10, 'Danny', 'Buck', '15-02-1973', 82, 2, 'M', ADRESSE_TYPE(10, '10 Rue Victor Hugo', 'Paris'), 
		RESULTATS_TYPE(
			RESULTAT_TYPE('Service Web', 18)
		)
	);


--QUESTION 6

SELECT * FROM ELEVES E
	WHERE (
		SELECT POINTS FROM TABLE (SELECT RESULTAT FROM ELEVES WHERE NUM_PERSONNE = E.NUM_PERSONNE) 
			WHERE NOM_COURS='Analyse') 
		>=10;
